module.exports = {
    // Files: [
    //     "**/*.ts",
    //     "**/*.tsx",
    //     "**/*.js",
    //     "**/*.jsx",
    //     "**/*.astro",
    //     "**/*.mjs",
    // ],
    ignorePatterns: ["node_modules", "dist", "build", ".cache", ".git"],
    env: {
        browser: true,
        es2021: true,
        node: true,
    },
    extends: ["eslint:recommended", "plugin:@typescript-eslint/recommended"],
    parser: "@typescript-eslint/parser",
    plugins: ["@typescript-eslint"],
    parserOptions: {
        ecmaVersion: "latest",
        sourceType: "module",
    },
    rules: {
        "array-callback-return": "error",
        "no-await-in-loop": "error",
        "no-cond-assign": ["error", "except-parens"],
        "no-constant-binary-expression": "error",
        "no-duplicate-imports": "error",
        "no-promise-executor-return": "error",
        "no-self-compare": "error",
        "no-template-curly-in-string": "error",
        "no-unmodified-loop-condition": "error",
        "no-unreachable-loop": "error",
        "no-use-before-define": "error",
        "use-isnan": "error",
        "require-atomic-updates": "error",
        camelcase: "error",
        "capitalized-comments": "error",
        "class-methods-use-this": "error",
        complexity: ["error", 4],
        curly: ["error", "all"],
        "default-case": "error",
        "default-case-last": "error",
        "default-param-last": "error",
        "dot-notation": "error",
        eqeqeq: "error",
        "func-names": "error",
        "max-depth": ["error", 4],
        "max-lines": ["error", 350],
        "max-lines-per-function": ["error", 50],
        "max-params": ["error", 4],
        "multiline-comment-style": ["error", "starred-block"],
        "no-console": "warn",
        "no-else-return": "error",
        "no-empty": "error",
        "no-empty-function": "error",
        "no-floating-decimal": "error",
        "no-implicit-coercion": "error",
        "no-implicit-globals": "error",
    },
    /*
     * LinterOptions: {
     *     reportUnusedDisableDirectives: true,
     * },
     */
};
